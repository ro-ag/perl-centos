package res

// Generated by https://quicktype.io
//
// To change quicktype's target language, run command:
//
//   "Set quicktype target language"

type JSON struct {
	Results []Result `json:"results"`
}

type Result struct {
	Extensions     []Extension       `json:"extensions"`
	PagingToken    interface{}       `json:"pagingToken"`
	ResultMetadata []ResultMetadatum `json:"resultMetadata"`
}

type Extension struct {
	Publisher        Publisher `json:"publisher"`
	ExtensionID      string    `json:"extensionId"`
	ExtensionName    string    `json:"extensionName"`
	DisplayName      string    `json:"displayName"`
	Flags            string    `json:"flags"`
	LastUpdated      string    `json:"lastUpdated"`
	PublishedDate    string    `json:"publishedDate"`
	ReleaseDate      string    `json:"releaseDate"`
	ShortDescription string    `json:"shortDescription"`
	Versions         []Version `json:"versions"`
	DeploymentType   int64     `json:"deploymentType"`
}

type Publisher struct {
	PublisherID      string `json:"publisherId"`
	PublisherName    string `json:"publisherName"`
	DisplayName      string `json:"displayName"`
	Flags            string `json:"flags"`
	Domain           string `json:"domain"`
	IsDomainVerified bool   `json:"isDomainVerified"`
}

type Version struct {
	Version          string `json:"version"`
	Flags            string `json:"flags"`
	LastUpdated      string `json:"lastUpdated"`
	Files            []File `json:"files"`
	AssetURI         string `json:"assetUri"`
	FallbackAssetURI string `json:"fallbackAssetUri"`
}

type File struct {
	AssetType string `json:"assetType"`
	Source    string `json:"source"`
}

type ResultMetadatum struct {
	MetadataType  string         `json:"metadataType"`
	MetadataItems []MetadataItem `json:"metadataItems"`
}

type MetadataItem struct {
	Name  string `json:"name"`
	Count int64  `json:"count"`
}

func AssetTypeVSIXPackage() string {
	return "Microsoft.VisualStudio.Services.VSIXPackage"
}

func (j JSON) VSIXPackageURL() string {
	last := j.Results[0].Extensions[0].Versions[0]
	for i := range last.Files {
		if last.Files[i].AssetType == AssetTypeVSIXPackage() {
			return last.Files[i].Source
		}
	}
	return ""
}

func (j JSON) IsExtensionURL() bool {
	last := j.Results[0].Extensions[0].Versions[0]
	for i := range last.Files {
		if last.Files[i].AssetType == AssetTypeVSIXPackage() {
			return true
		}
	}
	return false
}
